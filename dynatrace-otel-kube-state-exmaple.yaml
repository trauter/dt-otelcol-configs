# This file contains:
# An otel-collector 'dynatrace-otelcol-kube' configuration that 
#  - scrapes all metrics from kube-state-metrics.kube-system
#  - adds dt_kubernetes_cluster_id (to enable context creation on Dynatrace)
#  - adds other k8s specific labels
#  - translates labels from Prometheus naming schema to Dynatrace (e.g. "." vs "_")
#  - exports all metrics via Prometheus and Dynatrace (you have to provide your Dynatrace endpoint and API Token in a secret called dynatrace-otelcol-kube-state-dt-api-credentials)
# A deployment with the official opentelemetry collector (-contrib)
# A service account + clusterrole that enables the collector to access k8s API to gather endpoints and pod info 
apiVersion: v1
kind: ConfigMap
metadata:
  name: dynatrace-otelcol-kube-state-config
data:
  otel-collector-config: |
      processors:
        metricstransform:
        # transforms is a list of transformations with each element transforming a metric selected by metric name
          transforms:
            - include: ".*"
              # match_type specifies whether the include name should be used as a strict match or regexp match, default = strict
              match_type: regexp
              action: update
              operations:
              # add k8s cluster id
                - action: add_label
                  new_label: dt.kubernetes.cluster.id
                  new_value: ${DT_KUBERNETES_CLUSTER_ID}         
              # generic translations between prometheus ("_") and dt (".") world
                - action: update_label
                  label: k8s_deployment_name
                  new_label: k8s.deployment.name
                - action: update_label
                  label: dt_kubernetes_cluster_id
                  new_label: dt.kubernetes.cluster.id
                - action: update_label
                  label: k8s_pod_name
                  new_label: k8s.pod.name
                - action: update_label
                  label: k8s_pod_uid
                  new_label: k8s.pod.uid
                - action: update_label
                  label: k8s_workload_kind
                  new_label: k8s.workload.kind                  
                - action: update_label
                  label: dt_kubernetes_workload_kind
                  new_label: dt.kubernetes.workload.kind
                - action: update_label
                  label: dt_kubernetes_workload_name
                  new_label: dt.kubernetes.workload.name
                - action: update_label
                  label: k8s_node_name
                  new_label: k8s.node.name
                - action: update_label
                  label: k8s_namespace_name
                  new_label: k8s.namespace.name
                - action: update_label
                  label: k8s_label_name
                  new_label: k8s.label.name
                - action: update_label
                  label: k8s_label_app
                  new_label: k8s.label.app
      exporters:
        logging:
        prometheus:
          endpoint: "0.0.0.0:8889" # TODO: if desired, remove prometheus exporter from otel collector
        dynatrace:
          prefix: dynatrace_otelcol_example # TODO: Set prefix or remove completely
          endpoint: "${DT_API_ENDPOINT}/api/v2/metrics/ingest"
          # Token must at least have the Ingest metrics (metrics.ingest) permission
          api_token: "${DT_API_TOKEN}"
      extensions:
        health_check: {}
      receivers:
        prometheus:
          config:
            scrape_configs:
              - job_name: 'kube-state-metrics'
                static_configs:
                  - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8080']
                metric_relabel_configs:
                  - source_labels: [deployment]
                    action: replace
                    regex: "(.+)"
                    target_label: "k8s_workload_kind"
                    replacement: "deployment"
                  - source_labels: [deployment]
                    action: replace
                    regex: "(.+)"
                    target_label: "k8s_deployment_name"
                    replacement: "$$1"     
                  - source_labels: [namespace]
                    action: replace
                    regex: "(.+)"
                    target_label: "k8s_namespace_name"
                    replacement: "$$1"    
                  - source_labels: [node]
                    action: replace
                    regex: "(.+)"
                    target_label: "k8s_node_name"
                    replacement: "$$1"
                  - source_labels: [namespace, hpa]
                    action: replace
                    regex: "istio-system;(istio-telemetry.*)"
                    target_label: "k8s_deployment_name"
                    replacement: "$$1"  
                  - source_labels: [namespace, hpa]
                    action: replace
                    regex: "istio-system;(istio-telemetry.*)"
                    target_label: "k8s_workload_kind"
                    replacement: "deployment"                      
      service:
        telemetry:
          logs:
            level: "debug"  #TODO set log to info
        extensions:
          - health_check
        pipelines:
          metrics:
            exporters:
              - dynatrace
              - prometheus
              - logging
            processors: [metricstransform]
            receivers:
              - prometheus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dynatrace-otelcol-kube-state
spec:
  selector:
    matchLabels:
      app: dynatrace-otelcol-kube-state
  minReadySeconds: 5
  progressDeadlineSeconds: 120
  replicas: 1
  template:
    metadata:
      labels:
        app: dynatrace-otelcol-kube-state
    spec:
      serviceAccountName: dynatrace-otelcol-kube-state
      containers:
        - args: ["--config", "/conf/otel-collector-config.yaml"]
          env:
            - name: GOGC
              value: "80"
            - name: DT_KUBERNETES_CLUSTER_ID
              valueFrom:
                secretKeyRef:
                  name: dynatrace-otelcol-dt-api-credentials
                  key: DT_KUBERNETES_CLUSTER_ID            
            - name: DT_API_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: dynatrace-otelcol-dt-api-credentials
                  key: DT_API_ENDPOINT
            - name: DT_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: dynatrace-otelcol-dt-api-credentials
                  key: DT_API_TOKEN
          image: otel/opentelemetry-collector-contrib:0.46.0
          name: otel-collector
          resources:
            limits:
              cpu: 1
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 400Mi
          ports:
            - containerPort: 8889 # Default endpoint for querying metrics of prometheus exporter.
          volumeMounts:
            - name: dynatrace-otelcol-kube-state-config
              mountPath: /conf
          livenessProbe:
            httpGet:
              path: /
              port: 13133 # Health Check extension default port.
          readinessProbe:
            httpGet:
              path: /
              port: 13133 # Health Check extension default port.
      volumes:
        - configMap:
            name: dynatrace-otelcol-kube-state-config
            items:
              - key: otel-collector-config
                path: otel-collector-config.yaml
          name: dynatrace-otelcol-kube-state-config
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: dynatrace
  name: dynatrace-otelcol-kube-state
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dynatrace-otelcol-kube-state
rules:
  - apiGroups: [""]
    resources: ["nodes", "services", "pods"]
    verbs: ["list", "watch", "get"]
---
apiVersion: rbac.authorization.k8s.io/v1
# This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
kind: ClusterRoleBinding
metadata:
  name: dynatrace-otelcol-kube-state
subjects:
- kind: ServiceAccount
  name: dynatrace-otelcol-kube-state
  namespace: dynatrace
roleRef:
  kind: ClusterRole
  name: dynatrace-otelcol-kube-state
  apiGroup: rbac.authorization.k8s.io